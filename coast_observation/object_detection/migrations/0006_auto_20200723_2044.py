# Generated by Django 3.0.7 on 2020-07-23 20:44

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('object_detection', '0005_visitevent_distance_to_cam'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='detectionrule',
            options={'verbose_name': 'Правило распознания объекта', 'verbose_name_plural': 'Правила распознания объекта'},
        ),
        migrations.RemoveField(
            model_name='detectionrule',
            name='intervals',
        ),
        migrations.RemoveField(
            model_name='detectionrule',
            name='intervals_count',
        ),
        migrations.RemoveField(
            model_name='detectionrule',
            name='name',
        ),
        migrations.RemoveField(
            model_name='sensordata',
            name='aktive_detection_rule',
        ),
        migrations.AddField(
            model_name='detectionrule',
            name='class_name',
            field=models.CharField(default=1, help_text='Yolo classname', max_length=50, verbose_name='Класс распознаваемого объекта'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='detectionrule',
            name='min_size',
            field=models.IntegerField(default=0, verbose_name='Минимальный размер распознаваемого объекта в пикселях'),
        ),
        migrations.AddField(
            model_name='detectionrule',
            name='verbose_class_name',
            field=models.CharField(default=1, max_length=200, verbose_name='Читаемая метка объекта'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='sensordata',
            name='obj_detection_rules',
            field=models.ManyToManyField(blank=True, null=True, to='object_detection.DetectionRule', verbose_name='Разпознаваемые классы'),
        ),
        migrations.AlterField(
            model_name='detectionrule',
            name='max_id_distance',
            field=models.IntegerField(default=150, verbose_name='Максимальное расстояние для трекинга в пикселях'),
        ),
        migrations.AlterField(
            model_name='visitevent',
            name='event_type',
            field=models.IntegerField(choices=[(6, 'Береговая охрана: нарушение безопасной зоны'), (61, 'Береговая охрана: нарушение безопасной зоны (ночь)'), (7, 'Береговая охрана: фиксация объекта'), (8, 'Береговая охрана: столкновение (опасное сближение)'), (9, 'Береговая охрана: утопление (исчезновения человека в воде)')], default=7, verbose_name='Тип события'),
        ),
        migrations.CreateModel(
            name='RateRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intervals_count', models.IntegerField(default=2, verbose_name='Количество зон')),
                ('name', models.CharField(max_length=255, verbose_name='Название градации')),
                ('intervals', models.ManyToManyField(to='object_detection.RateVal', verbose_name='Список зон')),
            ],
            options={
                'verbose_name': 'Контролируемая зона',
                'verbose_name_plural': 'Контролируемые зоны',
            },
        ),
        migrations.AddField(
            model_name='sensordata',
            name='aktive_rate_rules',
            field=models.ManyToManyField(blank=True, null=True, to='object_detection.RateRule', verbose_name='Активные правила оценки'),
        ),
    ]
